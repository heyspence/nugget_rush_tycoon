{"version":3,"file":"main.js","mappings":"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","sources":["webpack://nugget_rush_tycoon/./src/scripts/background.js","webpack://nugget_rush_tycoon/./src/scripts/header-content.js","webpack://nugget_rush_tycoon/./src/scripts/static-object.js","webpack://nugget_rush_tycoon/./src/scripts/reward.js","webpack://nugget_rush_tycoon/./src/scripts/progress-bar.js","webpack://nugget_rush_tycoon/./src/scripts/clickable-object.js","webpack://nugget_rush_tycoon/./src/scripts/clover.js","webpack://nugget_rush_tycoon/./src/scripts/main-character.js","webpack://nugget_rush_tycoon/./src/scripts/horse.js","webpack://nugget_rush_tycoon/./src/scripts/tnt.js","webpack://nugget_rush_tycoon/./src/scripts/hired-hand.js","webpack://nugget_rush_tycoon/./src/scripts/bank.js","webpack://nugget_rush_tycoon/./src/scripts/shop-content.js","webpack://nugget_rush_tycoon/./src/scripts/menu.js","webpack://nugget_rush_tycoon/./src/index.js"],"sourcesContent":["import ClickableObject from \"./clickable-object\";\n\nclass Background{\n    constructor(ctx){\n        this.ctx = ctx\n\n        this.addBackgroundImg(this.ctx)\n    }\n\n    addBackgroundImg(ctx) {\n        const img  = document.querySelector(\"#main-background-img\");\n        ctx.drawImage(img, -750, -400);\n    }\n};\n\nexport default Background; ","class HeaderContent {\n    constructor(){\n        this.renderLogo()\n        this.renderTotal()\n        this.renderMenu()\n        if(localStorage.getItem(\"cashOnHand\") === 'NaN'){\n            localStorage.setItem(\"cashOnHand\", 0)\n        }\n    }\n    \n    get cashOnHand(){\n        let cash = localStorage.getItem(\"cashOnHand\")\n        return cash ? parseInt(cash) : 0\n    }\n\n    set cashOnHand(num) {\n        localStorage.setItem(\"cashOnHand\", num.toString())\n    }\n\n    renderLogo(){\n        const logoEle = document.querySelector(\"#main-title-container\")\n        const logo = document.createElement(\"img\")\n        logo.setAttribute(\"src\", \"./assets/output-onlinepngtools (2).png\")\n        logoEle.appendChild(logo)\n    }\n\n    renderTotal() {\n        const totalEle = document.querySelector(\"#main-total\");\n        totalEle.innerHTML = `<h2>Total: $${this.cashOnHand}</h2>`;\n    }\n\n    renderMenu() {\n        const menuEle = document.querySelector(\"#main-menu\");\n        menuEle.innerHTML = '<h2>Menu</h2>'\n    }\n\n    subtractFromTotal(num){\n        if(this.cashOnHand >= num){\n            this.cashOnHand -= num;\n            this.renderTotal();\n            return true;\n        }else{\n            console.log(\"insufficientfunds\")\n            return false;\n        }\n    }\n\n    resetTotal(){\n        this.cashOnHand = 0\n        this.renderTotal()\n    }\n}\n\nexport default HeaderContent","import ShopContent from \"./shop-content\";\n\nclass StaticObject{\n    constructor(ctx, options){\n        this.ctx = ctx\n        this.img = options.img;\n        this.size = options.size;\n        this.pos = options.pos;\n        this.scale = options.scale ? options.scale : [1, 1];\n\n        this.drawImg();\n        this[options.ability]();\n    }\n\n    drawImg(){\n        const img = new Image();\n\n        img.onload = () => {\n            this.ctx.save(); \n            this.ctx.scale(...this.scale);\n            this.ctx.drawImage(img, ...this.pos, ...this.size); \n            this.ctx.restore(); \n        }\n    \n        img.src = this.img;\n    }\n\n    increaseMaxStorage(){\n        let currentStorage = parseInt(localStorage.getItem(\"maxGold\"))\n        localStorage.setItem(\"maxGold\", currentStorage * 10);\n        ShopContent.updateStats();\n    }\n\n    increaseSpeed(){\n        let currentLoadSpeed = parseFloat(localStorage.getItem(\"loadSpeed\"))\n        localStorage.setItem(\"loadSpeed\", currentLoadSpeed + 0.35)\n\n        let currentAnimationSpeed = parseInt(localStorage.getItem(\"animationSpeed\"))\n        localStorage.setItem(\"animationSpeed\", currentAnimationSpeed - 50)\n    }\n}\n\nexport default StaticObject","class Reward{\n    constructor(ctx, pos, size, rewardPos){\n        this.ctx = ctx;\n        this.pos = [(pos[0] + rewardPos[0]), (pos[1] + rewardPos[1])];\n        this.size = size;\n\n        this.smallRewardSound = new Audio('assets/audio/little_robot_sound_factory_fantasy_Pickup_Gold_00.mp3');\n        this.bigRewardSound = new Audio('assets/audio/arcade-game-fruit-machine-jackpot-001-short.mp3');\n\n        if(!localStorage.getItem(\"maxLoot\")){\n            localStorage.setItem(\"maxLoot\", 80)\n        }\n\n        if(!localStorage.getItem(\"minLoot\")){\n            localStorage.setItem(\"minLoot\", 1)\n        }\n    }\n\n    get maxLoot(){\n        return parseFloat(localStorage.getItem(\"maxLoot\"))\n    }\n\n    get minLoot(){\n        return parseFloat(localStorage.getItem(\"minLoot\"))\n    }\n\n    get loadSpeed(){\n        return parseFloat(localStorage.getItem(\"loadSpeed\"))\n    }\n\n    static calculateReward(){\n        let num = 0;\n        let percent = (Math.random() * 100);\n        let max = parseFloat(localStorage.getItem(\"maxLoot\")) ? parseFloat(localStorage.getItem(\"maxLoot\")) : 80;\n        let min = (4/5) * max;\n        const smallRewardSound = new Audio('assets/audio/little_robot_sound_factory_fantasy_Pickup_Gold_00.mp3');\n        const bigRewardSound = new Audio('assets/audio/arcade-game-fruit-machine-jackpot-001-short.mp3')\n\n        if(percent <= 15){\n            num = Math.ceil(Math.random() * (max - min) + min);\n            bigRewardSound.play();\n        }else{\n            min = parseFloat(localStorage.getItem(\"minLoot\")) ? parseFloat(localStorage.getItem(\"minLoot\")) : 1;\n            num = Math.ceil(Math.random() * ((max / 20) - min) + min);\n            smallRewardSound.play();\n        }\n        return num;\n    }\n\n    renderReward(num){\n        this.ctx.fillStyle = \"rgb(253 214 67)\";\n        this.ctx.strokeStyle = \"rgb(178 98 18)\";\n        this.ctx.font = \"42px Luckiest Guy\";\n        this.ctx.fillText(`+$${num}`, ...this.pos);\n        this.ctx.strokeText(`+$${num}`, ...this.pos);\n\n        let textMetrix = this.ctx.measureText(`+$${num}`);\n        let textWidth = textMetrix.width;\n\n        setTimeout( ()=> this.ctx.clearRect(this.pos[0], (this.pos[1] - 38), textWidth, 38), \n            (800 / this.loadSpeed));\n    }\n}\n\nexport default Reward","import Reward from \"./reward\";\n\nclass ProgressBar{\n    constructor(ctx, pos, rewardPos, clickableObject){\n        this.ctx = ctx;\n        this.pos = [pos[0] + 5, pos[1] - 22];\n        this.size = [140, 15];\n        this.loadTime = 0.5;\n        this.currentWidth = 0;\n        this.clickableObject = clickableObject;\n        this.complete = false;\n        this.animating = false;\n        this.reward = new Reward(ctx, pos, this.size, rewardPos)\n\n        if(!localStorage.getItem(\"loadSpeed\")){\n            localStorage.setItem(\"loadSpeed\", 1.15)\n        }\n\n        if(!localStorage.getItem(\"maxLoot\")){\n            localStorage.setItem(\"maxLoot\", 80)\n        }\n\n        if(!localStorage.getItem(\"minLoot\")){\n            localStorage.setItem(\"minLoot\", 1)\n        }\n    }\n\n    get loadSpeed(){\n        return parseFloat(localStorage.getItem(\"loadSpeed\"))\n    }\n\n    animate = ()=> {\n        let currentCash = parseInt(localStorage.getItem(\"cashOnHand\"))\n        let currentMax = parseInt(localStorage.getItem(\"maxGold\"))\n        if(this.animating){\n            return;\n        }\n        if(currentCash >= currentMax){\n            console.log(\"storage insufficient\");\n            return;\n        }\n        \n        this.drawBackground();\n\n        const internalAnimate = () => {\n            if(this.complete){\n                this.reset();\n                return;\n            }\n            \n            if(this.clickableObject.imgList.length > 1) this.clickableObject.animate()\n\n            if(this.currentWidth >= this.size[0]){\n                let reward = Reward.calculateReward();\n                this.ctx.clearRect(...this.pos, ...this.size);\n                this.clickableObject.addToTotal(reward);\n                this.complete = true;\n                this.clickableObject.stopAnimation();\n                this.reward.renderReward(reward);\n            }\n\n            this.animating = true;\n\n            if((this.currentWidth + this.loadSpeed) > this.size[0]){\n                this.currentWidth = this.size[0]\n            }else{\n                this.currentWidth += this.loadSpeed;\n            }\n            this.update()\n\n            requestAnimationFrame(internalAnimate);\n        }\n\n        internalAnimate();\n    }\n    \n    update(){\n        this.ctx.fillStyle = \"rgb(253 214 67)\";\n        this.ctx.fillRect(this.pos[0] + 2, this.pos[1] + 3, this.currentWidth, this.size[1]);\n    }\n\n    clear(){\n        this.ctx.clearRect(this.pos[0] - 2, this.pos[1], this.size[0] + 8, this.size[1] + 6)\n    }\n\n    isComplete(){\n        return this.currentWidth >= this.size[0];\n    }\n\n    reset(){\n        this.currentWidth = 0;\n        this.clear()\n        this.animating = false;\n        this.complete = false;\n    }\n\n    drawBackground(){\n        this.ctx.fillStyle = \"rgb(38 22 23)\";\n        this.ctx.fillRect(this.pos[0] - 2, this.pos[1], this.size[0] + 8, this.size[1] + 6);\n    }\n}\n\nexport default ProgressBar","import ProgressBar from \"./progress-bar\";\n\nclass ClickableObject{\n    constructor(ctx, options, headerContent){\n        this.ctx = ctx;\n        this.ctx.imageSmoothingEnabled = false;\n\n        this.imgList = []\n        for(let i = 1; i < Object.keys(options).length; i++){\n            if(options['img' + i]){\n                this.imgList.push(options['img' + i]);\n            }\n        }\n\n        for(let i = 0; i < this.imgList.length; i++){\n            this['img' + (i + 1)] = this.loadImg(this.imgList[i])\n        }\n\n        this.counter = 0;\n        this.idleImg = this.loadImg(options.idleImg);\n        this.currentImg = this.imgList[0];\n        this.toggleInterval = null;\n\n        this.size = options.size;\n        this.pos = options.pos;\n\n        this.headerContent = headerContent\n        this.scale = options.scale ? options.scale : [1, 1]\n\n        this.rewardPos = options.rewardPos;\n\n        const progressBar = new ProgressBar(this.ctx, this.pos, this.rewardPos, this)\n        this.progressBar = progressBar\n        \n        this.idleImg.onload = () => {\n            this.ctx.clearRect(...this.pos, ...this.size);\n            this.ctx.drawImage(this.idleImg, ...this.pos, ...this.size)\n        }\n        \n        this.renderIdle()\n\n        if(!localStorage.getItem(\"animationSpeed\")){\n            localStorage.setItem(\"animationSpeed\", 450)\n        }\n    }\n    \n    get animationSpeed(){\n        return parseInt(localStorage.getItem(\"animationSpeed\"));\n    }\n    \n    set animationSpeed(num){\n        localStorage.setItem(\"animationSpeed\", num)\n    }\n    \n    loadImg(src){\n        let img = new Image();\n        img.src = src;\n        return img;\n    }\n\n    renderIdle(){\n        this.ctx.clearRect(...this.pos, ...this.size);\n        this.ctx.drawImage(this.idleImg, ...this.pos, ...this.size)\n    }\n\n    animate(){\n        if(this.toggleInterval) return;\n        \n        this.toggleInterval = setInterval(() => {\n            this.toggleImages();\n        }, this.animationSpeed)\n    }\n    \n    toggleImages(){\n        let images = [this.img1, this.img2]\n        if(this.counter === images.length - 1){\n            this.counter = 0\n        }else{\n            this.counter++\n        }\n        this.ctx.clearRect(...this.pos, ...this.size)\n        this.ctx.drawImage(images[this.counter], ...this.pos, ...this.size)\n    }\n\n    stopAnimation(){\n        if(this.toggleInterval){\n            clearInterval(this.toggleInterval);\n            this.toggleInterval = null;\n            this.currentImg = this.img4\n            this.renderIdle();\n        }\n    }\n\n    clickHandler(event){\n        const xCoordinates = [this.pos[0], this.pos[0] + this.size[0]]\n        const withinX = (event.canvasX >= xCoordinates[0] && event.canvasX <= xCoordinates[1])\n        const yCoordinates = [this.pos[1], this.pos[1] + this.size[1]]\n        const withinY = (event.canvasY >= yCoordinates[0] && event.canvasY <= yCoordinates[1])\n        \n        if(withinX && withinY){\n            this.progressBar.animate()\n        }\n    }\n\n    addToTotal(num){\n        this.headerContent.cashOnHand = this.headerContent.cashOnHand + num;\n        this.headerContent.renderTotal();\n    }\n}\n\nexport default ClickableObject;","import StaticObject from \"./static-object\";\nimport ShopContent from \"./shop-content\";\n\nclass Clover extends StaticObject{\n    constructor(ctx, options){\n        super(ctx, options)\n        this.pos = [...options.pos]\n    }\n\n    increaseMaxLoot(){\n        let currentMax = parseInt(localStorage.getItem(\"maxLoot\"))\n        localStorage.setItem(\"maxLoot\", currentMax + 25);\n\n        ShopContent.updateStats();\n\n        this.stopAnimation.bind(this)();\n        this.animate.bind(this)();\n    }\n\n    drawImg(){\n        let img = new Image();\n        img.onload = () => {\n            this.clear.bind(this)();\n            this.ctx.drawImage(img, ...this.pos, ...this.size);\n        }\n\n        img.src = this.img;\n    }\n\n    animate(){\n        setTimeout(this.stopAnimation.bind(this), 500);\n        const internalAnimate = () => {\n            this.pos[1] -= 2\n            this.drawImg();\n            this.animationFrameId = requestAnimationFrame(internalAnimate);\n        }\n        internalAnimate();\n    }\n\n    stopAnimation(){\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = null;\n            this.clear.bind(this)();\n        }\n    }\n\n    clear(){\n        this.ctx.clearRect(this.pos[0] + 40, this.pos[1] + 40, 30, 40)\n    }\n}\n\nexport default Clover","import ClickableObject from \"./clickable-object\";\n\nclass MainCharacter extends ClickableObject{\n    constructor(ctx, options, headerContent, ...args){\n        super(ctx, options, headerContent);\n        this.victorySound = new Audio('assets/audio/success-fanfare-trumpets-6185.mp3');\n    }\n\n    displayVictoryCrown(imgUri){\n        const img = new Image();\n\n        img.onload = () => {\n            this.ctx.save(); \n            this.ctx.scale(...this.scale);\n            this.victorySound.play()\n            this.ctx.drawImage(img, this.pos[0] - 10, this.pos[1] + 10, 110, 110); \n            this.ctx.restore(); \n        }\n    \n        img.src = imgUri;\n    }\n}\n\nexport default MainCharacter;","import StaticObject from \"./static-object\";\nimport ShopContent from \"./shop-content\";\n\nclass Horse extends StaticObject{\n    constructor(ctx, options){\n        super(ctx, options)\n        this.pos = [...options.pos]\n    }\n\n    increaseSpeed(){\n        let currentLoadSpeed = parseFloat(localStorage.getItem(\"loadSpeed\"))\n        localStorage.setItem(\"loadSpeed\", currentLoadSpeed + 0.35)\n\n        let currentAnimationSpeed = parseInt(localStorage.getItem(\"animationSpeed\"))\n        localStorage.setItem(\"animationSpeed\", currentAnimationSpeed - 50)\n\n        ShopContent.updateStats();\n\n        this.stopAnimation.bind(this)();\n        this.animate.bind(this)();\n    }\n\n    drawImg(){\n        let img = new Image();\n        img.onload = () => {\n            this.clear.bind(this)();\n            this.ctx.drawImage(img, ...this.pos, ...this.size);\n        }\n\n        img.src = this.img;\n    }\n\n    animate(){\n        setTimeout(this.stopAnimation.bind(this), 500);\n        const internalAnimate = () => {\n            this.pos[1] -= 2\n            this.drawImg();\n            this.animationFrameId = requestAnimationFrame(internalAnimate);\n        }\n        internalAnimate();\n    }\n\n    stopAnimation(){\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = null;\n            this.clear.bind(this)();\n        }\n    }\n\n    clear(){\n        this.ctx.clearRect(...this.pos, this.size[0], this.size[1] + 5)\n    }\n}\n\nexport default Horse","import StaticObject from \"./static-object\";\nimport ShopContent from \"./shop-content\";\n\nclass Tnt extends StaticObject{\n    constructor(ctx, options){\n        super(ctx, options)\n        this.pos = [...options.pos]\n    }\n\n    increaseMaxLoot(){\n        let currentMin = parseInt(localStorage.getItem(\"minLoot\"))\n        localStorage.setItem(\"minLoot\", currentMin + 3);\n\n        ShopContent.updateStats();\n\n        this.stopAnimation.bind(this)();\n        this.animate.bind(this)();\n    }\n\n    drawImg(){\n        let img = new Image();\n        img.onload = () => {\n            this.clear.bind(this)();\n            this.ctx.drawImage(img, ...this.pos, ...this.size);\n        }\n\n        img.src = this.img;\n    }\n\n    animate(){\n        setTimeout(this.stopAnimation.bind(this), 500);\n        const internalAnimate = () => {\n            this.pos[1] -= 2\n            this.drawImg();\n            this.animationFrameId = requestAnimationFrame(internalAnimate);\n        }\n        internalAnimate();\n    }\n\n    stopAnimation(){\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = null;\n            this.clear.bind(this)();\n        }\n    }\n\n    clear(){\n        this.ctx.clearRect(this.pos[0], this.pos[1], 50, 50)\n    }\n}\n\nexport default Tnt","import ClickableObject from \"./clickable-object\";\nimport MainCharacter from \"./main-character\";\n\nclass HiredHand extends ClickableObject{\n    constructor(ctx, options, headerContent, ...args){\n        super(ctx, options, headerContent)\n    }\n\n    autoClick(){\n        setInterval(this.progressBar.animate, 2500)\n    }\n}\n\nexport default HiredHand;","import ClickableObject from \"./clickable-object\";\nimport MainCharacter from \"./main-character\";\n\nclass Bank extends ClickableObject{\n    constructor(ctx, options, headerContent, ...args){\n        super(ctx, options, headerContent)\n    }\n\n    autoClick(){\n        setInterval(this.progressBar.animate, 2500)\n    }\n}\n\nexport default Bank;","import itemData from './store-items.json';\nimport StaticObject from './static-object';\nimport ClickableObject from './clickable-object';\nimport Clover from './clover';\nimport MainCharacter from './main-character';\nimport Horse from './horse';\nimport Tnt from './tnt';\nimport HiredHand from './hired-hand';\nimport Bank from './bank';\n\nclass ShopContent{\n    constructor(headerContent, mainCharacter){\n        this.shop = document.querySelector(\"#main-shop\")\n        this.headerContent = headerContent\n        this.mainCharacter = mainCharacter\n        this.ctx = mainCharacter.ctx\n    \n        if(!localStorage.getItem(\"maxGold\")){\n            localStorage.setItem(\"maxGold\", 500)\n        }\n        \n        this.renderTitle()\n        this.renderShopItems()\n        this.renderStats()\n    }\n    \n    get maxGold(){\n        let gold = localStorage.getItem(\"maxGold\");\n        return parseInt(gold);\n    }\n    get maxNugget(){\n        let max = localStorage.getItem(\"maxLoot\");\n        return parseInt(max);\n    }\n    get digSpeed(){\n        return localStorage.getItem(\"loadSpeed\") ? Math.round(parseFloat(localStorage.getItem(\"loadSpeed\")) * 10) : 0.5 ;\n    }\n    get minNugget(){\n        let min = localStorage.getItem(\"minLoot\");\n        return parseInt(min);\n    }\n    \n    static updateStats(){\n        let currentMax = localStorage.getItem(\"maxGold\");\n        currentMax = parseInt(currentMax)\n    \n        let maxGold = document.querySelector(\"#max-gold\")\n        maxGold.innerText = `Max storage: $${currentMax}`\n\n        let maxNugget = document.querySelector(\"#max-nugget\")\n        maxNugget.innerText = `Nugget Size: $${parseInt(localStorage.getItem(\"minLoot\"))} - $${parseInt(localStorage.getItem(\"maxLoot\"))}`\n    \n        let digSpeed = document.querySelector(\"#dig-speed\")\n        digSpeed.innerText = `Dig Speed: ${Math.round(parseFloat(localStorage.getItem(\"loadSpeed\")) * 10)}`\n    }\n\n    renderTitle(){\n        let titleItem = document.createElement(\"h2\")\n        titleItem.setAttribute(\"id\", \"shop-title\")\n        titleItem.innerText = \"Shop\"\n        this.shop.appendChild(titleItem)\n    }\n\n    renderShopItems(){\n        itemData[\"store-items\"].forEach(item => {\n            let shopItem = document.createElement(\"div\")\n            shopItem.setAttribute(\"class\",\"shop-item\")\n            shopItem.classList.add(\"tooltip\")\n            shopItem.setAttribute(\"id\", item.name)\n            shopItem.setAttribute(\"data-tooltip\", item.tooltip)\n            shopItem.classList.add(\"btn\")\n\n            let shopItemPrice = document.createElement(\"p\")\n            shopItemPrice.innerText = `$${item.price}`\n\n            let img = new Image(50, 50)\n            img.src = `${item.imgSrc}`\n\n            shopItem.appendChild(img)\n            shopItem.appendChild(shopItemPrice)\n            this.shop.appendChild(shopItem)\n\n            const classMap = {\n                \"StaticObject\": StaticObject,\n                \"ClickableObject\": ClickableObject,\n                \"Clover\": Clover,\n                \"MainCharacter\": MainCharacter,\n                \"HiredHand\": HiredHand,\n                \"Horse\": Horse,\n                \"Tnt\": Tnt,\n                \"Bank\": Bank\n            }\n\n            shopItem.addEventListener(\"click\", (e)=>{\n                if(item.stock !== 0){\n                    if(this.headerContent.subtractFromTotal(`${item.price}`)){\n                        if(item.newInstance){\n                            let newClass = classMap[item.class]\n                            let newChar = new newClass(this.ctx, item.args, this.headerContent)\n\n                            if(item.action){\n                                newChar[item.action]()\n                            }\n                        }else if(item.method){\n                            this[item.method][item.action](...item.args)\n                        }\n\n                        item.stock--;\n                        if(item.stock === 0){\n                            event.currentTarget.classList.add(\"sold-out\")\n                        }\n                    }\n                }else{\n                    shopItem.addEventListener(\"click\", ()=>{\n                        if(!item.stock === 0){\n                            if(this.headerContent.subtractFromTotal(`${item.price}`)){\n                                if(item.newInstance){\n                                    let newClass = classMap[item.class]\n                                    let newChar = new newClass(this.ctx, item.args, this.headerContent)\n        \n                                    if(item.action){\n                                        newChar[item.action]()\n                                    }\n                                }else if(item.method){\n                                    this[item.method][item.action](...item.args)\n                                }\n        \n                                item.stock--;\n                                if(item.stock === 0){\n                                    event.currentTarget.classList.add(\"sold-out\")\n                                }\n                            }\n                        }else{\n                            if(!event.currentTarget.classList.contains(\"sold-out\")){\n                                event.currentTarget.classList.add(\"sold-out\")\n                            }\n                            console.log(\"Item out of stock\")\n                        }\n                    })\n                    console.log(\"Item out of stock\")\n                }\n            })\n        })\n    }\n\n    renderStats(){\n        let statsItem = document.createElement(\"div\")\n        statsItem.setAttribute(\"id\", \"main-stats\")\n\n        let statsHeader = document.createElement(\"h2\")\n        statsHeader.innerText = \"Current Stats\"\n\n        let maxGold = document.createElement(\"p\")\n        maxGold.setAttribute(\"id\", \"max-gold\")\n        maxGold.innerText = `Max Storage: $${this.maxGold}`\n\n        let maxNugget = document.createElement(\"p\")\n        maxNugget.setAttribute(\"id\", \"max-nugget\")\n        maxNugget.innerText = `Nugget Size: $${this.minNugget} - $${this.maxNugget}`\n\n        let digSpeed = document.createElement(\"p\")\n        digSpeed.setAttribute(\"id\", \"dig-speed\")\n        digSpeed.innerText = `Dig Speed: ${this.digSpeed}`\n\n        statsItem.appendChild(statsHeader)\n        statsItem.appendChild(maxGold)\n        statsItem.appendChild(maxNugget)\n        statsItem.appendChild(digSpeed)\n        this.shop.appendChild(statsItem)\n    }\n\n    soldOut(ele){\n        ele.classList.add(\"sold-out\");\n        console.log(\"sold-out\")\n    }\n}\n\nexport default ShopContent","class Menu{\n    constructor(){\n        let menuEle = document.querySelector(\"#main-menu\");\n        menuEle.addEventListener(\"click\", this.revealModal.bind(this));\n\n        this.overlay = document.querySelector(\".overlay\");\n        this.modal = document.querySelector(\".modal\");\n        \n        let closeBtn = document.querySelector(\".btn-close\");\n        closeBtn.addEventListener(\"click\", this.hideModal.bind(this));\n        this.overlay.addEventListener(\"click\", this.hideModal.bind(this));\n\n        let resetBtn = document.querySelector(\"#reset\")\n        resetBtn.addEventListener(\"click\", this.resetGame.bind(this))\n\n        let demoBtn = document.querySelector(\"#demo\");\n        demoBtn.addEventListener(\"click\", this.cheat.bind(this));\n    }\n\n    revealModal(){\n        console.log(\"menu clicked\");\n        this.modal.classList.remove(\"hidden\");\n        this.overlay.classList.remove(\"hidden\");\n\n    }\n\n    hideModal(){\n        this.modal.classList.add(\"hidden\");\n        this.overlay.classList.add(\"hidden\");\n    }\n\n    resetGame(){\n        localStorage.clear();\n        location.reload();\n    }\n\n    cheat(){\n        localStorage.setItem(\"cashOnHand\", 100000);\n        location.reload();\n    }\n}\n\nexport default Menu;","import ClickableObject from \"./scripts/clickable-object\";\nimport Background from \"./scripts/background\";\nimport HeaderContent from \"./scripts/header-content\"\nimport ShopContent from \"./scripts/shop-content\";\nimport MainCharacter from \"./scripts/main-character\";\nimport Menu from \"./scripts/menu\";\n\nwindow.addEventListener(\"load\", () => {\n\n    const canvas = document.getElementById(\"canvas\");\n    const canvas2 = document.getElementById(\"canvas2\");\n\n    const ctx = canvas.getContext(\"2d\");\n    const ctx2 = canvas2.getContext(\"2d\");\n    \n    const background = new Background(ctx);\n    const menu = new Menu();\n    const headerContent = new HeaderContent();\n    \n    const mainCharacterOptions = {\n        pos: [165, 175],\n        size: [150, 170],\n        rewardPos: [165, 165],\n        img1: \"assets/Cowboy 4 HiRes/Cowboy4_idle without gun_3.png\",\n        img2: \"assets/finalShovel.png\",\n        idleImg: \"assets/Cowboy 4 HiRes/Cowboy4_idle without gun_1.png\"\n    }\n    \n    const mainCharacter = new MainCharacter(ctx2, mainCharacterOptions, headerContent)\n    canvas2.addEventListener(\"click\", (event) => {\n        const rect = canvas2.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        \n        event.canvasX = x;\n        event.canvasY = y;\n        \n        mainCharacter.clickHandler(event);\n    });\n    \n    const shopContent = new ShopContent(headerContent, mainCharacter)\n})\n    "],"names":["constructor","ctx","this","addBackgroundImg","img","document","querySelector","drawImage","renderLogo","renderTotal","renderMenu","localStorage","getItem","setItem","cashOnHand","cash","parseInt","num","toString","logoEle","logo","createElement","setAttribute","appendChild","innerHTML","subtractFromTotal","console","log","resetTotal","options","size","pos","scale","drawImg","ability","Image","onload","save","restore","src","increaseMaxStorage","currentStorage","ShopContent","updateStats","increaseSpeed","currentLoadSpeed","parseFloat","currentAnimationSpeed","rewardPos","smallRewardSound","Audio","bigRewardSound","maxLoot","minLoot","loadSpeed","calculateReward","percent","Math","random","max","min","ceil","play","renderReward","fillStyle","strokeStyle","font","fillText","strokeText","textWidth","measureText","width","setTimeout","clearRect","clickableObject","loadTime","currentWidth","complete","animating","reward","Reward","animate","currentCash","currentMax","drawBackground","internalAnimate","reset","imgList","length","addToTotal","stopAnimation","update","requestAnimationFrame","fillRect","clear","isComplete","headerContent","imageSmoothingEnabled","i","Object","keys","push","loadImg","counter","idleImg","currentImg","toggleInterval","progressBar","ProgressBar","renderIdle","animationSpeed","setInterval","toggleImages","images","img1","img2","clearInterval","img4","clickHandler","event","xCoordinates","withinX","canvasX","yCoordinates","withinY","canvasY","StaticObject","super","increaseMaxLoot","bind","animationFrameId","cancelAnimationFrame","ClickableObject","victorySound","displayVictoryCrown","imgUri","currentMin","autoClick","mainCharacter","shop","renderTitle","renderShopItems","renderStats","maxGold","gold","maxNugget","digSpeed","round","minNugget","innerText","titleItem","itemData","forEach","item","shopItem","classList","add","name","tooltip","shopItemPrice","price","imgSrc","classMap","Clover","MainCharacter","HiredHand","Horse","Tnt","Bank","addEventListener","e","stock","newInstance","newChar","newClass","class","args","action","method","currentTarget","contains","statsItem","statsHeader","soldOut","ele","revealModal","overlay","modal","hideModal","resetGame","cheat","remove","location","reload","window","canvas","getElementById","canvas2","getContext","ctx2","Background","Menu","HeaderContent","rect","getBoundingClientRect","x","clientX","left","y","clientY","top"],"sourceRoot":""}