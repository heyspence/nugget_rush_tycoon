{"version":3,"file":"main.js","mappings":"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","sources":["webpack://nugget_rush_tycoon/./src/scripts/background.js","webpack://nugget_rush_tycoon/./src/scripts/header-content.js","webpack://nugget_rush_tycoon/./src/scripts/static-object.js","webpack://nugget_rush_tycoon/./src/scripts/progress-bar.js","webpack://nugget_rush_tycoon/./src/scripts/clickable-object.js","webpack://nugget_rush_tycoon/./src/scripts/clover.js","webpack://nugget_rush_tycoon/./src/scripts/main-character.js","webpack://nugget_rush_tycoon/./src/scripts/horse.js","webpack://nugget_rush_tycoon/./src/scripts/shop-content.js","webpack://nugget_rush_tycoon/./src/scripts/menu.js","webpack://nugget_rush_tycoon/./src/index.js"],"sourcesContent":["import ClickableObject from \"./clickable-object\";\n\nclass Background{\n    constructor(ctx){\n        this.ctx = ctx\n\n        this.addBackgroundImg(this.ctx)\n    }\n\n    addBackgroundImg(ctx) {\n        const img  = document.querySelector(\"#main-background-img\");\n        ctx.drawImage(img, -750, -400);\n    }\n};\n\nexport default Background; ","class HeaderContent {\n    constructor(){\n        this.renderLogo()\n        this.renderTotal()\n        this.renderMenu()\n        if(localStorage.getItem(\"cashOnHand\") === 'NaN'){\n            localStorage.setItem(\"cashOnHand\", 0)\n        }\n    }\n    \n    get cashOnHand(){\n        let cash = localStorage.getItem(\"cashOnHand\")\n        return cash ? parseInt(cash) : 0\n    }\n\n    set cashOnHand(num) {\n        localStorage.setItem(\"cashOnHand\", num.toString())\n    }\n\n    renderLogo(){\n        const logoEle = document.querySelector(\"#main-title-container\")\n        const logo = document.createElement(\"img\")\n        logo.setAttribute(\"src\", \"./assets/output-onlinepngtools (2).png\")\n        logoEle.appendChild(logo)\n    }\n\n    renderTotal() {\n        const totalEle = document.querySelector(\"#main-total\");\n        totalEle.innerHTML = `<h2>Total: $${this.cashOnHand}</h2>`;\n    }\n\n    renderMenu() {\n        const menuEle = document.querySelector(\"#main-menu\");\n        menuEle.innerHTML = '<h2>Menu</h2>'\n    }\n\n    subtractFromTotal(num){\n        if(this.cashOnHand >= num){\n            this.cashOnHand -= num;\n            this.renderTotal();\n            return true;\n        }else{\n            console.log(\"insufficientfunds\")\n            return false;\n        }\n    }\n\n    resetTotal(){\n        this.cashOnHand = 0\n        this.renderTotal()\n    }\n}\n\nexport default HeaderContent","import ShopContent from \"./shop-content\";\n\nclass StaticObject{\n    constructor(ctx, options){\n        this.ctx = ctx\n        this.img = options.img;\n        this.size = options.size;\n        this.pos = options.pos;\n        this.scale = options.scale ? options.scale : [1, 1];\n\n        this.drawImg();\n        this[options.ability]();\n    }\n\n    drawImg(){\n        const img = new Image();\n\n        img.onload = () => {\n            this.ctx.save(); \n            this.ctx.scale(...this.scale);\n            this.ctx.drawImage(img, ...this.pos, ...this.size); \n            this.ctx.restore(); \n        }\n    \n        img.src = this.img;\n    }\n\n    increaseMaxStorage(){\n        let currentStorage = parseInt(localStorage.getItem(\"maxGold\"))\n        localStorage.setItem(\"maxGold\", currentStorage * 10);\n        ShopContent.updateStats();\n    }\n\n    increaseSpeed(){\n        let currentLoadSpeed = parseFloat(localStorage.getItem(\"loadSpeed\"))\n        localStorage.setItem(\"loadSpeed\", currentLoadSpeed + 0.35)\n\n        let currentAnimationSpeed = parseInt(localStorage.getItem(\"animationSpeed\"))\n        localStorage.setItem(\"animationSpeed\", currentAnimationSpeed - 50)\n    }\n}\n\nexport default StaticObject","class ProgressBar{\n    constructor(ctx, pos, clickableObject){\n        this.ctx = ctx;\n        this.pos = [pos[0] - 15, pos[1] - 22];\n        this.size = [140, 15];\n        this.loadTime = 0.5;\n        this.currentWidth = 0;\n        this.clickableObject = clickableObject;\n        this.complete = false;\n        this.animating = false;\n\n\n        if(!localStorage.getItem(\"loadSpeed\")){\n            localStorage.setItem(\"loadSpeed\", 0.8)\n        }\n\n        if(!localStorage.getItem(\"maxLoot\")){\n            localStorage.setItem(\"maxLoot\", 75)\n        }\n    }\n\n    get loadSpeed(){\n        return parseFloat(localStorage.getItem(\"loadSpeed\"))\n    }\n\n    set loadSpeed(num){\n        localStorage.setItem(\"loadSpeed\", num)\n    }\n\n    get maxLoot(){\n        return parseFloat(localStorage.getItem(\"maxLoot\"))\n    }\n\n    set maxLoot(num){\n        localStorage.setItem(\"maxLoot\", num)\n    }\n\n    animate = ()=> {\n        let currentCash = parseInt(localStorage.getItem(\"cashOnHand\"))\n        let currentMax = parseInt(localStorage.getItem(\"maxGold\"))\n        if(this.animating){\n            return;\n        }\n        if(currentCash >= currentMax){\n            console.log(\"storage insufficient\");\n            return;\n        }\n        \n        this.drawBackground();\n\n        const internalAnimate = () => {\n            if(this.complete){\n                this.reset();\n                return;\n            }\n\n            this.clickableObject.animate()\n\n            if(this.currentWidth >= this.size[0]){\n                let reward = this.calculateReward.bind(this)();\n                this.ctx.clearRect(...this.pos, ...this.size);\n                this.clickableObject.addToTotal(reward);\n                this.complete = true;\n                this.clickableObject.stopAnimation();\n                this.renderReward(reward);\n            }\n\n            this.animating = true;\n\n            if((this.currentWidth + this.loadSpeed) > this.size[0]){\n                this.currentWidth = this.size[0]\n            }else{\n                this.currentWidth += this.loadSpeed;\n            }\n            this.update()\n\n            requestAnimationFrame(internalAnimate);\n        }\n\n        internalAnimate();\n    }\n    \n    update(){\n        this.ctx.fillStyle = \"rgb(253 214 67)\";\n        this.ctx.fillRect(this.pos[0] + 2, this.pos[1] + 3, this.currentWidth, this.size[1]);\n    }\n\n    clear(){\n        this.ctx.clearRect(this.pos[0] - 2, this.pos[1], this.size[0] + 8, this.size[1] + 6)\n    }\n\n    isComplete(){\n        return this.currentWidth >= this.size[0];\n    }\n\n    reset(){\n        this.currentWidth = 0;\n        this.clear()\n        this.animating = false;\n        this.complete = false;\n    }\n\n    calculateReward(){\n        let num = 0\n        let percent = (Math.random() * 100)\n\n        if(percent <= 10){\n            let min = (4/5) * this.maxLoot;\n            let max = this.maxLoot\n            num = Math.ceil(Math.random() * (max - min) + min)\n        }else{\n            num = Math.floor(Math.random() * (this.maxLoot / 10))\n        }\n        return num;\n    }\n\n    renderReward(num){\n        this.ctx.fillStyle = \"rgb(253 214 67)\";\n        this.ctx.strokeStyle = \"rgb(178 98 18)\";\n        this.ctx.font = \"42px Luckiest Guy\";\n        this.ctx.fillText(`+$${num}`, this.pos[0] + 165, this.pos[1] + 150);\n        this.ctx.strokeText(`+$${num}`, this.pos[0] + 165, this.pos[1] + 150);\n\n        let textMetrix = this.ctx.measureText(`+$${num}`);\n        let textWidth = textMetrix.width;\n\n        setTimeout( ()=> this.ctx.clearRect(this.pos[0] + 165, this.pos[1] + 114, textWidth, 38), \n            (800 / this.loadSpeed));\n    }\n\n    drawBackground(){\n        this.ctx.fillStyle = \"rgb(38 22 23)\";\n        this.ctx.fillRect(this.pos[0] - 2, this.pos[1], this.size[0] + 8, this.size[1] + 6);\n    }\n}\n\nexport default ProgressBar","import ProgressBar from \"./progress-bar\";\n\nclass ClickableObject{\n    constructor(ctx, options, headerContent){\n        this.ctx = ctx;\n        this.ctx.imageSmoothingEnabled = false;\n\n        this.imgList = []\n        for(let i = 1; i < Object.keys(options).length; i++){\n            if(options['img' + i]){\n                this.imgList.push(options['img' + i]);\n            }\n        }\n\n        for(let i = 0; i < this.imgList.length; i++){\n            this['img' + (i + 1)] = this.loadImg(this.imgList[i])\n        }\n\n        this.counter = 0;\n        this.idleImg = this.loadImg(options.idleImg);\n        this.currentImg = this.imgList[0];\n        this.toggleInterval = null;\n\n        this.size = options.size;\n        this.pos = options.pos;\n\n        this.headerContent = headerContent\n        this.scale = options.scale ? options.scale : [1, 1]\n\n        const progressBar = new ProgressBar(this.ctx, this.pos, this)\n        this.progressBar = progressBar\n        \n        this.idleImg.onload = () => {\n            this.ctx.clearRect(...this.pos, ...this.size);\n            this.ctx.drawImage(this.idleImg, ...this.pos, ...this.size)\n        }\n        \n        this.renderIdle()\n\n        if(!localStorage.getItem(\"animationSpeed\")){\n            localStorage.setItem(\"animationSpeed\", 450)\n        }\n    }\n    \n    get animationSpeed(){\n        return parseInt(localStorage.getItem(\"animationSpeed\"));\n    }\n    \n    set animationSpeed(num){\n        localStorage.setItem(\"animationSpeed\", num)\n    }\n    \n    loadImg(src){\n        let img = new Image();\n        img.src = src;\n        return img;\n    }\n\n    renderIdle(){\n        this.ctx.clearRect(...this.pos, ...this.size);\n        this.ctx.drawImage(this.idleImg, ...this.pos, ...this.size)\n    }\n\n    animate(){\n        if(this.toggleInterval) return;\n        \n        this.toggleInterval = setInterval(() => {\n            this.toggleImages();\n        }, this.animationSpeed)\n    }\n    \n    toggleImages(){\n        let images = [this.img1, this.img2]\n        if(this.counter === images.length - 1){\n            this.counter = 0\n        }else{\n            this.counter++\n        }\n        this.ctx.clearRect(...this.pos, ...this.size)\n        this.ctx.drawImage(images[this.counter], ...this.pos, ...this.size)\n    }\n\n    stopAnimation(){\n        if(this.toggleInterval){\n            clearInterval(this.toggleInterval);\n            this.toggleInterval = null;\n            this.currentImg = this.img4\n            this.renderIdle();\n        }\n    }\n\n    clickHandler(event){\n        const xCoordinates = [this.pos[0], this.pos[0] + this.size[0]]\n        const withinX = (event.canvasX >= xCoordinates[0] && event.canvasX <= xCoordinates[1])\n        const yCoordinates = [this.pos[1], this.pos[1] + this.size[1]]\n        const withinY = (event.canvasY >= yCoordinates[0] && event.canvasY <= yCoordinates[1])\n        \n        if(withinX && withinY){\n            this.progressBar.animate()\n        }\n    }\n\n    addToTotal(num){\n        this.headerContent.cashOnHand = this.headerContent.cashOnHand + num;\n        this.headerContent.renderTotal();\n    }\n\n    autoClick(){\n        setInterval(this.progressBar.animate, 450)\n    }\n}\n\nexport default ClickableObject;","import StaticObject from \"./static-object\";\nimport ShopContent from \"./shop-content\";\n\nclass Clover extends StaticObject{\n    constructor(ctx, options){\n        super(ctx, options)\n        this.pos = [...options.pos]\n    }\n\n    increaseMaxLoot(){\n        let currentMax = parseInt(localStorage.getItem(\"maxLoot\"))\n        localStorage.setItem(\"maxLoot\", currentMax + 10);\n\n        ShopContent.updateStats();\n\n        this.stopAnimation.bind(this)();\n        this.animate.bind(this)();\n    }\n\n    drawImg(){\n        let img = new Image();\n        img.onload = () => {\n            this.clear.bind(this)();\n            this.ctx.drawImage(img, ...this.pos, ...this.size);\n        }\n\n        img.src = this.img;\n    }\n\n    animate(){\n        setTimeout(this.stopAnimation.bind(this), 500);\n        const internalAnimate = () => {\n            this.pos[1] -= 2\n            this.drawImg();\n            this.animationFrameId = requestAnimationFrame(internalAnimate);\n        }\n        internalAnimate();\n    }\n\n    stopAnimation(){\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = null;\n            this.clear.bind(this)();\n        }\n    }\n\n    clear(){\n        this.ctx.clearRect(this.pos[0] + 40, this.pos[1] + 40, 30, 40)\n    }\n}\n\nexport default Clover","import ClickableObject from \"./clickable-object\";\n\nclass MainCharacter extends ClickableObject{\n    constructor(ctx, options, headerContent, ...args){\n        super(ctx, options, headerContent)\n    }\n\n    displayVictoryCrown(imgUri){\n        const img = new Image();\n\n        img.onload = () => {\n            this.ctx.save(); \n            this.ctx.scale(...this.scale);\n            this.ctx.drawImage(img, this.pos[0] - 10, this.pos[1] + 10, 110, 110); \n            this.ctx.restore(); \n        }\n    \n        img.src = imgUri;\n    }\n}\n\nexport default MainCharacter;","import StaticObject from \"./static-object\";\nimport ShopContent from \"./shop-content\";\n\nclass Horse extends StaticObject{\n    constructor(ctx, options){\n        super(ctx, options)\n        this.pos = [...options.pos]\n    }\n\n    increaseSpeed(){\n        let currentLoadSpeed = parseFloat(localStorage.getItem(\"loadSpeed\"))\n        localStorage.setItem(\"loadSpeed\", currentLoadSpeed + 0.35)\n\n        let currentAnimationSpeed = parseInt(localStorage.getItem(\"animationSpeed\"))\n        localStorage.setItem(\"animationSpeed\", currentAnimationSpeed - 50)\n\n        ShopContent.updateStats();\n\n        this.stopAnimation.bind(this)();\n        this.animate.bind(this)();\n    }\n\n    drawImg(){\n        let img = new Image();\n        img.onload = () => {\n            this.clear.bind(this)();\n            this.ctx.drawImage(img, ...this.pos, ...this.size);\n        }\n\n        img.src = this.img;\n    }\n\n    animate(){\n        setTimeout(this.stopAnimation.bind(this), 500);\n        const internalAnimate = () => {\n            this.pos[1] -= 2\n            this.drawImg();\n            this.animationFrameId = requestAnimationFrame(internalAnimate);\n        }\n        internalAnimate();\n    }\n\n    stopAnimation(){\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = null;\n            this.clear.bind(this)();\n        }\n    }\n\n    clear(){\n        this.ctx.clearRect(...this.pos, this.size[0], this.size[1] + 5)\n    }\n}\n\nexport default Horse","import itemData from './store-items.json';\nimport StaticObject from './static-object';\nimport ClickableObject from './clickable-object';\nimport Clover from './clover';\nimport MainCharacter from './main-character';\nimport Horse from './horse';\n\nclass ShopContent{\n    constructor(headerContent, mainCharacter){\n        this.shop = document.querySelector(\"#main-shop\")\n        this.headerContent = headerContent\n        this.mainCharacter = mainCharacter\n        this.ctx = mainCharacter.ctx\n    \n        if(!localStorage.getItem(\"maxGold\")){\n            localStorage.setItem(\"maxGold\", 1000)\n        }\n        \n        this.renderTitle()\n        this.renderShopItems()\n        this.renderStats()\n    }\n    \n    get maxGold(){\n        let gold = localStorage.getItem(\"maxGold\");\n        return parseInt(gold);\n    }\n    set maxGold(num){\n        localStorage.setItem(\"maxGold\", num.toString());\n    }\n    get maxNugget(){\n        let max = localStorage.getItem(\"maxLoot\");\n        return parseInt(max);\n    }\n    set maxNugget(num){\n        localStorage.setItem(\"maxLoot\", num.toString());\n    }\n\n    get digSpeed(){\n        return localStorage.getItem(\"loadSpeed\") ? Math.round(parseFloat(localStorage.getItem(\"loadSpeed\")) * 10) : 0.5 ;\n    }\n    \n    static updateStats(){\n        let currentMax = localStorage.getItem(\"maxGold\");\n        currentMax = parseInt(currentMax)\n    \n        let maxGold = document.querySelector(\"#max-gold\")\n        maxGold.innerText = `Max storage: $${currentMax}`\n\n        let maxNugget = document.querySelector(\"#max-nugget\")\n        maxNugget.innerText = `Max possible nugget: $${parseInt(localStorage.getItem(\"maxLoot\"))}`\n    \n        let digSpeed = document.querySelector(\"#dig-speed\")\n        digSpeed.innerText = `Dig Speed: ${Math.round(parseFloat(localStorage.getItem(\"loadSpeed\")) * 10)}`\n    }\n\n    renderTitle(){\n        let titleItem = document.createElement(\"h2\")\n        titleItem.setAttribute(\"id\", \"shop-title\")\n        titleItem.innerText = \"Shop\"\n        this.shop.appendChild(titleItem)\n    }\n\n    renderShopItems(){\n        itemData[\"store-items\"].forEach(item => {\n            let shopItem = document.createElement(\"div\")\n            shopItem.setAttribute(\"class\",\"shop-item\")\n            shopItem.classList.add(\"tooltip\")\n            shopItem.setAttribute(\"id\", item.name)\n            shopItem.setAttribute(\"data-tooltip\", item.tooltip)\n            shopItem.classList.add(\"btn\")\n\n            let shopItemPrice = document.createElement(\"p\")\n            shopItemPrice.innerText = `$${item.price}`\n\n            let img = new Image(50, 50)\n            img.src = `${item.imgSrc}`\n\n            shopItem.appendChild(img)\n            shopItem.appendChild(shopItemPrice)\n            this.shop.appendChild(shopItem)\n\n            const classMap = {\n                \"StaticObject\": StaticObject,\n                \"ClickableObject\": ClickableObject,\n                \"Clover\": Clover,\n                \"MainCharacter\": MainCharacter,\n                \"Horse\": Horse\n            }\n\n            shopItem.addEventListener(\"click\", (e)=>{\n                if(item.stock !== 0){\n                    if(this.headerContent.subtractFromTotal(`${item.price}`)){\n                        if(item.newInstance){\n                            let newClass = classMap[item.class]\n                            let newChar = new newClass(this.ctx, item.args, this.headerContent)\n\n                            if(item.action){\n                                newChar[item.action]()\n                            }\n                        }else if(item.method){\n                            this[item.method][item.action](...item.args)\n                        }\n\n                        item.stock--;\n                        if(item.stock === 0){\n                            event.currentTarget.classList.add(\"sold-out\")\n                        }\n                    }\n                }else{\n                    shopItem.addEventListener(\"click\", ()=>{\n                        if(!item.stock === 0){\n                            if(this.headerContent.subtractFromTotal(`${item.price}`)){\n                                if(item.newInstance){\n                                    let newClass = classMap[item.class]\n                                    let newChar = new newClass(this.ctx, item.args, this.headerContent)\n        \n                                    if(item.action){\n                                        newChar[item.action]()\n                                    }\n                                }else if(item.method){\n                                    this[item.method][item.action](...item.args)\n                                }\n        \n                                item.stock--;\n                                if(item.stock === 0){\n                                    event.currentTarget.classList.add(\"sold-out\")\n                                }\n                            }\n                        }else{\n                            if(!event.currentTarget.classList.contains(\"sold-out\")){\n                                event.currentTarget.classList.add(\"sold-out\")\n                            }\n                            console.log(\"Item out of stock\")\n                        }\n                    })\n                    console.log(\"Item out of stock\")\n                }\n            })\n        })\n    }\n\n    renderStats(){\n        let statsItem = document.createElement(\"div\")\n        statsItem.setAttribute(\"id\", \"main-stats\")\n\n        let statsHeader = document.createElement(\"h2\")\n        statsHeader.innerText = \"Current Stats\"\n\n        let maxGold = document.createElement(\"p\")\n        maxGold.setAttribute(\"id\", \"max-gold\")\n        maxGold.innerText = `Max Storage: $${this.maxGold}`\n\n        let maxNugget = document.createElement(\"p\")\n        maxNugget.setAttribute(\"id\", \"max-nugget\")\n        maxNugget.innerText = `Max Nugget Size: $${this.maxNugget}`\n\n        let digSpeed = document.createElement(\"p\")\n        digSpeed.setAttribute(\"id\", \"dig-speed\")\n        digSpeed.innerText = `Dig Speed: ${this.digSpeed}`\n\n        statsItem.appendChild(statsHeader)\n        statsItem.appendChild(maxGold)\n        statsItem.appendChild(maxNugget)\n        statsItem.appendChild(digSpeed)\n        this.shop.appendChild(statsItem)\n    }\n\n    soldOut(ele){\n        ele.classList.add(\"sold-out\");\n        console.log(\"sold-out\")\n    }\n}\n\nexport default ShopContent","class Menu{\n    constructor(){\n        let menuEle = document.querySelector(\"#main-menu\");\n        menuEle.addEventListener(\"click\", this.revealModal.bind(this));\n\n        this.overlay = document.querySelector(\".overlay\");\n        this.modal = document.querySelector(\".modal\");\n        \n        let closeBtn = document.querySelector(\".btn-close\");\n        closeBtn.addEventListener(\"click\", this.hideModal.bind(this));\n        this.overlay.addEventListener(\"click\", this.hideModal.bind(this));\n\n        let resetBtn = document.querySelector(\"#reset\")\n        resetBtn.addEventListener(\"click\", this.resetGame.bind(this))\n\n        let demoBtn = document.querySelector(\"#demo\");\n        demoBtn.addEventListener(\"click\", this.setDemo.bind(this));\n    }\n\n    revealModal(){\n        console.log(\"menu clicked\");\n        this.modal.classList.remove(\"hidden\");\n        this.overlay.classList.remove(\"hidden\");\n\n    }\n\n    hideModal(){\n        this.modal.classList.add(\"hidden\");\n        this.overlay.classList.add(\"hidden\");\n    }\n\n    resetGame(){\n        localStorage.clear();\n        location.reload();\n    }\n\n    setDemo(){\n        localStorage.setItem(\"cashOnHand\", 100000);\n        localStorage.setItem(\"maxGold\", 1000000);\n        location.reload();\n    }\n}\n\nexport default Menu;","import ClickableObject from \"./scripts/clickable-object\";\nimport Background from \"./scripts/background\";\nimport HeaderContent from \"./scripts/header-content\"\nimport ShopContent from \"./scripts/shop-content\";\nimport MainCharacter from \"./scripts/main-character\";\nimport Menu from \"./scripts/menu\";\n\nwindow.addEventListener(\"load\", () => {\n\n    const canvas = document.getElementById(\"canvas\");\n    const canvas2 = document.getElementById(\"canvas2\");\n\n    const ctx = canvas.getContext(\"2d\");\n    const ctx2 = canvas2.getContext(\"2d\");\n    \n    const background = new Background(ctx);\n    const menu = new Menu();\n    const headerContent = new HeaderContent();\n    \n    const mainCharacterOptions = {\n        pos: [200, 175],\n        size: [150, 170],\n        img1: \"assets/Cowboy 4 HiRes/Cowboy4_idle without gun_3.png\",\n        img2: \"assets/finalShovel.png\",\n        idleImg: \"assets/Cowboy 4 HiRes/Cowboy4_idle without gun_1.png\"\n    }\n    \n    const mainCharacter = new MainCharacter(ctx2, mainCharacterOptions, headerContent)\n    canvas2.addEventListener(\"click\", (event) => {\n        const rect = canvas2.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        \n        event.canvasX = x;\n        event.canvasY = y;\n        \n        mainCharacter.clickHandler(event);\n    });\n    \n    const shopContent = new ShopContent(headerContent, mainCharacter)\n})\n    "],"names":["constructor","ctx","this","addBackgroundImg","img","document","querySelector","drawImage","renderLogo","renderTotal","renderMenu","localStorage","getItem","setItem","cashOnHand","cash","parseInt","num","toString","logoEle","logo","createElement","setAttribute","appendChild","innerHTML","subtractFromTotal","console","log","resetTotal","options","size","pos","scale","drawImg","ability","Image","onload","save","restore","src","increaseMaxStorage","currentStorage","ShopContent","updateStats","increaseSpeed","currentLoadSpeed","parseFloat","currentAnimationSpeed","clickableObject","loadTime","currentWidth","complete","animating","loadSpeed","maxLoot","animate","currentCash","currentMax","drawBackground","internalAnimate","reset","reward","calculateReward","bind","clearRect","addToTotal","stopAnimation","renderReward","update","requestAnimationFrame","fillStyle","fillRect","clear","isComplete","Math","random","min","max","ceil","floor","strokeStyle","font","fillText","strokeText","textWidth","measureText","width","setTimeout","headerContent","imageSmoothingEnabled","imgList","i","Object","keys","length","push","loadImg","counter","idleImg","currentImg","toggleInterval","progressBar","ProgressBar","renderIdle","animationSpeed","setInterval","toggleImages","images","img1","img2","clearInterval","img4","clickHandler","event","xCoordinates","withinX","canvasX","yCoordinates","withinY","canvasY","autoClick","StaticObject","super","increaseMaxLoot","animationFrameId","cancelAnimationFrame","ClickableObject","displayVictoryCrown","imgUri","mainCharacter","shop","renderTitle","renderShopItems","renderStats","maxGold","gold","maxNugget","digSpeed","round","innerText","titleItem","itemData","forEach","item","shopItem","classList","add","name","tooltip","shopItemPrice","price","imgSrc","classMap","Clover","MainCharacter","Horse","addEventListener","e","stock","newInstance","newChar","newClass","class","args","action","method","currentTarget","contains","statsItem","statsHeader","soldOut","ele","revealModal","overlay","modal","hideModal","resetGame","setDemo","remove","location","reload","window","canvas","getElementById","canvas2","getContext","ctx2","Background","Menu","HeaderContent","rect","getBoundingClientRect","x","clientX","left","y","clientY","top"],"sourceRoot":""}