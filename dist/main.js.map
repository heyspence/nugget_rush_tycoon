{"version":3,"file":"main.js","mappings":"6BAsGA,ECaA,ECpGA,ECsCA,E,ECZA,EC+DA,ELFA,EAtGA,MACIA,WAAAA,CAAYC,EAAKC,EAAKC,GAClBC,KAAKH,IAAMA,EACXG,KAAKF,IAAM,CAACA,EAAI,GAAK,GAAIA,EAAI,GAAK,IAClCE,KAAKC,KAAO,CAAC,IAAK,IAClBD,KAAKE,SAAW,GAChBF,KAAKG,aAAe,EACpBH,KAAKD,gBAAkBA,EACvBC,KAAKI,UAAW,EAChBJ,KAAKK,WAAY,EAGbC,aAAaC,QAAQ,cACrBD,aAAaE,QAAQ,YAAa,GAE1C,CAEA,aAAIC,GACA,OAAOC,WAAWJ,aAAaC,QAAQ,aAC3C,CAEA,aAAIE,CAAUE,GACVL,aAAaE,QAAQ,YAAaG,EACtC,CAEAC,QAAUA,KACN,IAAIC,EAAcC,SAASR,aAAaC,QAAQ,eAC5CQ,EAAaD,SAASR,aAAaC,QAAQ,YAC/C,GAAGP,KAAKK,UACJ,OAEJ,GAAGQ,GAAeE,EAEd,YADAC,QAAQC,IAAI,uBAIhBjB,KAAKkB,iBAEL,MAAMC,EAAkBA,KACpB,GAAGnB,KAAKI,SACJJ,KAAKoB,YADT,CAOA,GAFApB,KAAKD,gBAAgBa,UAElBZ,KAAKG,cAAgBH,KAAKC,KAAK,GAAG,CACjC,IAAIoB,EAASC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC7BxB,KAAKH,IAAI4B,aAAazB,KAAKF,OAAQE,KAAKC,MACxCD,KAAKD,gBAAgB2B,WAAWL,GAChCrB,KAAKI,UAAW,EAChBJ,KAAKD,gBAAgB4B,gBACrB3B,KAAK4B,aAAaP,EACtB,CAEArB,KAAKK,WAAY,EACjBL,KAAKG,cAAgBH,KAAKS,UAC1BT,KAAK6B,SAELC,sBAAsBX,EAjBtB,CAiBsC,EAG1CA,GAAiB,EAGrBU,MAAAA,GACI7B,KAAKH,IAAIkC,UAAY,kBACrB/B,KAAKH,IAAImC,SAAShC,KAAKF,IAAI,GAAK,EAAGE,KAAKF,IAAI,GAAK,EAAGE,KAAKG,aAAcH,KAAKC,KAAK,GACrF,CAEAgC,KAAAA,GACIjC,KAAKH,IAAI4B,UAAUzB,KAAKF,IAAI,GAAK,EAAGE,KAAKF,IAAI,GAAIE,KAAKC,KAAK,GAAK,EAAGD,KAAKC,KAAK,GAAK,EACtF,CAEAiC,UAAAA,GACI,OAAOlC,KAAKG,cAAgBH,KAAKC,KAAK,EAC1C,CAEAmB,KAAAA,GACIpB,KAAKG,aAAe,EACpBH,KAAKiC,QACLjC,KAAKK,WAAY,EACjBL,KAAKI,UAAW,CACpB,CAEAwB,YAAAA,CAAajB,GACTX,KAAKH,IAAIkC,UAAY,kBACrB/B,KAAKH,IAAIsC,KAAO,oBAChBnC,KAAKH,IAAIuC,SAAU,KAAIzB,IAAOX,KAAKF,IAAI,GAAK,IAAKE,KAAKF,IAAI,GAAK,KAE/D,IACIuC,EADarC,KAAKH,IAAIyC,YAAa,KAAI3B,KAChB4B,MAE3BC,YAAY,IAAKxC,KAAKH,IAAI4B,UAAUzB,KAAKF,IAAI,GAAK,IAAKE,KAAKF,IAAI,GAAK,IAAKuC,EAAW,KAAK,IAC9F,CAEAnB,cAAAA,GACIlB,KAAKH,IAAIkC,UAAY,gBACrB/B,KAAKH,IAAImC,SAAShC,KAAKF,IAAI,GAAK,EAAGE,KAAKF,IAAI,GAAIE,KAAKC,KAAK,GAAK,EAAGD,KAAKC,KAAK,GAAK,EACrF,GCgBJ,EAjHA,MACIL,WAAAA,CAAYC,EAAK4C,EAASC,GACtB1C,KAAKH,IAAMA,EACXG,KAAKH,IAAI8C,uBAAwB,EAEjC3C,KAAK4C,KAAO,IAAIC,MAChB7C,KAAK4C,KAAKE,IAAML,EAAQG,KACxB5C,KAAK+C,KAAO,IAAIF,MAChB7C,KAAK+C,KAAKD,IAAML,EAAQM,KACxB/C,KAAKgD,KAAO,IAAIH,MAChB7C,KAAKgD,KAAKF,IAAML,EAAQO,KACxBhD,KAAKiD,KAAO,IAAIJ,MAChB7C,KAAKiD,KAAKH,IAAML,EAAQQ,KACxBjD,KAAKkD,QAAU,EACflD,KAAKmD,QAAU,IAAIN,MACnB7C,KAAKmD,QAAQL,IAAML,EAAQU,QAC3BnD,KAAKoD,WAAapD,KAAK4C,KACvB5C,KAAKqD,eAAiB,KAEtBrD,KAAKC,KAAOwC,EAAQxC,KACpBD,KAAKF,IAAM2C,EAAQ3C,IAEnBE,KAAK0C,cAAgBA,EACrB1C,KAAKsD,MAAQb,EAAQa,MAAQb,EAAQa,MAAQ,CAAC,EAAG,GAEjD,MAAMC,EAAc,IAAIC,EAAYxD,KAAKH,IAAKG,KAAKF,IAAKE,MACxDA,KAAKuD,YAAcA,EAEnBvD,KAAKyD,aACLzD,KAAKmD,QAAQO,OAAS,KAClB1D,KAAKH,IAAI4B,aAAazB,KAAKF,OAAQE,KAAKC,MACxCD,KAAKH,IAAI8D,UAAU3D,KAAKmD,WAAYnD,KAAKF,OAAQE,KAAKC,KAAK,EAG3DK,aAAaC,QAAQ,mBACrBD,aAAaE,QAAQ,iBAAkB,IAE/C,CAEA,kBAAIoD,GACA,OAAO9C,SAASR,aAAaC,QAAQ,kBACzC,CAEA,kBAAIqD,CAAejD,GACfL,aAAaE,QAAQ,iBAAkBG,EAC3C,CAEA8C,UAAAA,GACIzD,KAAKH,IAAI4B,aAAazB,KAAKF,OAAQE,KAAKC,MACxCD,KAAKH,IAAI8D,UAAU3D,KAAKmD,WAAYnD,KAAKF,OAAQE,KAAKC,KAC1D,CAEA4D,YAAAA,GACI,IAAIC,EAAS,CAAC9D,KAAKgD,KAAMhD,KAAKiD,MAC3BjD,KAAKkD,UAAYY,EAAOC,OAAS,EAChC/D,KAAKkD,QAAU,EAEflD,KAAKkD,UAETlD,KAAKH,IAAI4B,aAAazB,KAAKF,OAAQE,KAAKC,MACxCD,KAAKH,IAAI8D,UAAUG,EAAO9D,KAAKkD,YAAalD,KAAKF,OAAQE,KAAKC,KAClE,CAEAW,OAAAA,GACOZ,KAAKqD,iBAERrD,KAAKqD,eAAiBW,aAAY,KAC9BhE,KAAK6D,cAAc,GACpB7D,KAAK4D,gBACZ,CAEAjC,aAAAA,GACO3B,KAAKqD,iBACJY,cAAcjE,KAAKqD,gBACnBrD,KAAKqD,eAAiB,KACtBrD,KAAKyD,aAEb,CAEAS,YAAAA,CAAaC,GACT,MAAMC,EAAe,CAACpE,KAAKF,IAAI,GAAIE,KAAKF,IAAI,GAAKE,KAAKC,KAAK,IACrDoE,EAAWF,EAAMG,SAAWF,EAAa,IAAMD,EAAMG,SAAWF,EAAa,GAC7EG,EAAe,CAACvE,KAAKF,IAAI,GAAIE,KAAKF,IAAI,GAAKE,KAAKC,KAAK,IACrDuE,EAAWL,EAAMM,SAAWF,EAAa,IAAMJ,EAAMM,SAAWF,EAAa,GAEhFF,GAAWG,GACVxE,KAAKuD,YAAY3C,SAEzB,CAEAc,UAAAA,CAAWf,GACPX,KAAK0C,cAAcgC,WAAa1E,KAAK0C,cAAcgC,WAAa/D,EAChEX,KAAK0C,cAAciC,aACvB,CAEAC,SAAAA,GACIZ,YAAYhE,KAAKuD,YAAY3C,QAAS,IAC1C,CAEAiE,mBAAAA,CAAoBC,GAChB,MAAMC,EAAM,IAAIlC,MAEhBkC,EAAIrB,OAAS,KACT1D,KAAKH,IAAImF,OACThF,KAAKH,IAAIyD,SAAStD,KAAKsD,OACvBtD,KAAKH,IAAI8D,UAAUoB,EAAK/E,KAAKF,IAAI,GAAK,GAAIE,KAAKF,IAAI,GAAK,GAAI,IAAK,KACjEE,KAAKH,IAAIoF,SAAS,EAGtBF,EAAIjC,IAAMgC,CACd,GCjGJ,EAbA,MACIlF,WAAAA,CAAYC,GACRG,KAAKH,IAAMA,EAEXG,KAAKkF,iBAAiBlF,KAAKH,IAC/B,CAEAqF,gBAAAA,CAAiBrF,GACb,MAAMkF,EAAOI,SAASC,cAAc,wBACpCvF,EAAI8D,UAAUoB,GAAM,KAAM,IAC9B,GCyCJ,EArDA,MACInF,WAAAA,GACII,KAAKqF,aACLrF,KAAK2E,cACL3E,KAAKsF,aACqC,QAAvChF,aAAaC,QAAQ,eACpBD,aAAaE,QAAQ,aAAc,EAE3C,CAEA,cAAIkE,GACA,IAAIa,EAAOjF,aAAaC,QAAQ,cAChC,OAAOgF,EAAOzE,SAASyE,GAAQ,CACnC,CAEA,cAAIb,CAAW/D,GACXL,aAAaE,QAAQ,aAAcG,EAAI6E,WAC3C,CAEAH,UAAAA,GACI,MAAMI,EAAUN,SAASC,cAAc,yBACjCM,EAAOP,SAASQ,cAAc,OACpCD,EAAKE,aAAa,MAAO,0CACzBH,EAAQI,YAAYH,EACxB,CAEAf,WAAAA,GACqBQ,SAASC,cAAc,eAC/BU,UAAa,eAAc9F,KAAK0E,iBAC7C,CAEAY,UAAAA,GACoBH,SAASC,cAAc,cAC/BU,UAAY,eACxB,CAEAC,iBAAAA,CAAkBpF,GACd,OAAGX,KAAK0E,YAAc/D,GAClBX,KAAK0E,YAAc/D,EACnBX,KAAK2E,eACE,IAEP3D,QAAQC,IAAI,sBACL,EAEf,CAEA+E,UAAAA,GACIhG,KAAK0E,WAAa,EAClB1E,KAAK2E,aACT,G,y2CCTJ,EAvCA,MACI/E,WAAAA,CAAYC,EAAK4C,GACbzC,KAAKH,IAAMA,EACXG,KAAK+E,IAAMtC,EAAQsC,IACnB/E,KAAKC,KAAOwC,EAAQxC,KACpBD,KAAKF,IAAM2C,EAAQ3C,IACnBE,KAAKsD,MAAQb,EAAQa,MAAQb,EAAQa,MAAQ,CAAC,EAAG,GAEjDtD,KAAKiG,UACLjG,KAAKyC,EAAQyD,UACjB,CAEAD,OAAAA,GACI,MAAMlB,EAAM,IAAIlC,MAEhBkC,EAAIrB,OAAS,KACT1D,KAAKH,IAAImF,OACThF,KAAKH,IAAIyD,SAAStD,KAAKsD,OACvBtD,KAAKH,IAAI8D,UAAUoB,KAAQ/E,KAAKF,OAAQE,KAAKC,MAC7CD,KAAKH,IAAIoF,SAAS,EAGtBF,EAAIjC,IAAM9C,KAAK+E,GACnB,CAEAoB,kBAAAA,GACI7F,aAAaE,QAAQ,UAAW,KAChC4F,EAAYC,aAChB,CAEAC,aAAAA,GACI,IAAIC,EAAmB7F,WAAWJ,aAAaC,QAAQ,cACvDD,aAAaE,QAAQ,YAAa+F,EAAmB,KAErD,IAAIC,EAAwB1F,SAASR,aAAaC,QAAQ,mBAC1DD,aAAaE,QAAQ,iBAAkBgG,EAAwB,GACnE,GCkEJ,EApGA,MACI5G,WAAAA,CAAY8C,EAAe+D,GACvBzG,KAAK0G,KAAOvB,SAASC,cAAc,cACnCpF,KAAK0C,cAAgBA,EACrB1C,KAAKyG,cAAgBA,EACrBzG,KAAKH,IAAM4G,EAAc5G,IAErBS,aAAaC,QAAQ,YACrBD,aAAaE,QAAQ,UAAW,KAGpCR,KAAK2G,cACL3G,KAAK4G,kBACL5G,KAAK6G,aACT,CAEA,WAAIC,GACA,IAAIC,EAAOzG,aAAaC,QAAQ,WAChC,OAAOO,SAASiG,EACpB,CAEA,WAAID,CAAQnG,GACRL,aAAaE,QAAQ,UAAWG,EAAI6E,WACxC,CAEA,kBAAOa,GACH,IAAItF,EAAaT,aAAaC,QAAQ,WACtCQ,EAAaD,SAASC,GAERoE,SAASC,cAAc,aAC7B4B,UAAa,iBAAgBjG,IAEtBoE,SAASC,cAAc,cAC7B4B,UAAa,gBAC1B,CAEAL,WAAAA,GACI,IAAIM,EAAY9B,SAASQ,cAAc,MACvCsB,EAAUrB,aAAa,KAAM,cAC7BqB,EAAUD,UAAY,OACtBhH,KAAK0G,KAAKb,YAAYoB,EAC1B,CAEAL,eAAAA,GACIM,EAAAA,EAAwBC,SAAQC,IAC5B,IAAIC,EAAWlC,SAASQ,cAAc,OACtC0B,EAASzB,aAAa,QAAQ,aAC9ByB,EAASzB,aAAa,KAAMwB,EAAKE,MAEjC,IAAIC,EAAgBpC,SAASQ,cAAc,KAC3C4B,EAAcP,UAAa,IAAGI,EAAKI,QAEnC,IAAIzC,EAAM,IAAIlC,MAAM,GAAI,IACxBkC,EAAIjC,IAAO,GAAEsE,EAAKK,SAElBJ,EAASxB,YAAYd,GACrBsC,EAASxB,YAAY0B,GACrBvH,KAAK0G,KAAKb,YAAYwB,GAEtB,MAAMK,EAAW,CACb,aAAgBC,EAChB,gBAAmBC,GAGvBP,EAASQ,iBAAiB,SAAS,KAC5B7H,KAAK0C,cAAcqD,kBAAmB,GAAEqB,EAAKI,WACzCJ,EAAKU,YAGJ,IAAIC,EADWL,EAASN,EAAKY,QAChBhI,KAAKH,IAAKuH,EAAKa,KAAMjI,KAAK0C,eAClC0E,EAAKc,QACVlI,KAAKoH,EAAKc,QAAQd,EAAKe,WAAWf,EAAKa,MAE/C,GACF,GAEV,CAEApB,WAAAA,GACI,IAAIuB,EAAYjD,SAASQ,cAAc,OACvCyC,EAAUxC,aAAa,KAAM,cAE7B,IAAIyC,EAAclD,SAASQ,cAAc,MACzC0C,EAAYrB,UAAY,gBAExB,IAAIF,EAAU3B,SAASQ,cAAc,KACrCmB,EAAQlB,aAAa,KAAM,YAC3BkB,EAAQE,UAAa,iBAAgBhH,KAAK8G,UAE1C,IAAIwB,EAAWnD,SAASQ,cAAc,KACtC2C,EAAS1C,aAAa,KAAM,aAC5B0C,EAAStB,UAAa,iBAEtBoB,EAAUvC,YAAYwC,GACtBD,EAAUvC,YAAYiB,GACtBsB,EAAUvC,YAAYyC,GACtBtI,KAAK0G,KAAKb,YAAYuC,EAC1B,GChGJG,OAAOV,iBAAiB,QAAQ,KAC5B7G,QAAQC,IAAI,2BAEZ,MAAMuH,EAASrD,SAASsD,eAAe,UACjCC,EAAUvD,SAASsD,eAAe,WAElC5I,EAAM2I,EAAOG,WAAW,MACxBC,EAAOF,EAAQC,WAAW,MAI1BjG,GAFa,IAAImG,EAAWhJ,GAEZ,IAAIiJ,GAYpBrC,EAAgB,IAAImB,EAAgBgB,EAVb,CACzB9I,IAAK,CAAC,IAAK,KACXG,KAAM,CAAC,IAAK,KACZ2C,KAAM,oDACNG,KAAM,oDACNC,KAAM,uDACNC,KAAM,yBACNE,QAAS,wDAGyDT,GACtEgG,EAAQb,iBAAiB,SAAU1D,IAC/B,MAAM4E,EAAOL,EAAQM,wBACfC,EAAI9E,EAAM+E,QAAUH,EAAKI,KACzBC,EAAIjF,EAAMkF,QAAUN,EAAKO,IAE/BnF,EAAMG,QAAU2E,EAChB9E,EAAMM,QAAU2E,EAEhB3C,EAAcvC,aAAaC,EAAM,IAGjB,IAAIiC,EAAY1D,EAAe+D,EAAc,G","sources":["webpack://nugget_rush_tycoon/./src/scripts/progress-bar.js","webpack://nugget_rush_tycoon/./src/scripts/clickable-object.js","webpack://nugget_rush_tycoon/./src/scripts/background.js","webpack://nugget_rush_tycoon/./src/scripts/header-content.js","webpack://nugget_rush_tycoon/./src/scripts/static-object.js","webpack://nugget_rush_tycoon/./src/scripts/shop-content.js","webpack://nugget_rush_tycoon/./src/index.js"],"sourcesContent":["class ProgressBar{\n    constructor(ctx, pos, clickableObject){\n        this.ctx = ctx;\n        this.pos = [pos[0] - 15, pos[1] - 22];\n        this.size = [140, 15];\n        this.loadTime = 0.5;\n        this.currentWidth = 0;\n        this.clickableObject = clickableObject;\n        this.complete = false;\n        this.animating = false;\n\n\n        if(!localStorage.getItem(\"loadSpeed\")){\n            localStorage.setItem(\"loadSpeed\", 0.5)\n        }\n    }\n\n    get loadSpeed(){\n        return parseFloat(localStorage.getItem(\"loadSpeed\"))\n    }\n\n    set loadSpeed(num){\n        localStorage.setItem(\"loadSpeed\", num)\n    }\n\n    animate = ()=> {\n        let currentCash = parseInt(localStorage.getItem(\"cashOnHand\"))\n        let currentMax = parseInt(localStorage.getItem(\"maxGold\"))\n        if(this.animating){\n            return;\n        }\n        if(currentCash >= currentMax){\n            console.log(\"storage insuficient\");\n            return;\n        }\n        \n        this.drawBackground();\n\n        const internalAnimate = () => {\n            if(this.complete){\n                this.reset();\n                return;\n            }\n\n            this.clickableObject.animate()\n\n            if(this.currentWidth >= this.size[0]){\n                let reward = Math.floor(Math.random() * 100)\n                this.ctx.clearRect(...this.pos, ...this.size);\n                this.clickableObject.addToTotal(reward);\n                this.complete = true;\n                this.clickableObject.stopAnimation();\n                this.renderReward(reward);\n            }\n\n            this.animating = true;\n            this.currentWidth += this.loadSpeed;\n            this.update()\n\n            requestAnimationFrame(internalAnimate);\n        }\n\n        internalAnimate();\n    }\n    \n    update(){\n        this.ctx.fillStyle = \"rgb(253 214 67)\";\n        this.ctx.fillRect(this.pos[0] + 2, this.pos[1] + 3, this.currentWidth, this.size[1]);\n    }\n\n    clear(){\n        this.ctx.clearRect(this.pos[0] - 2, this.pos[1], this.size[0] + 6, this.size[1] + 6)\n    }\n\n    isComplete(){\n        return this.currentWidth >= this.size[0];\n    }\n\n    reset(){\n        this.currentWidth = 0;\n        this.clear()\n        this.animating = false;\n        this.complete = false;\n    }\n\n    renderReward(num){\n        this.ctx.fillStyle = \"rgb(38, 22, 23)\";\n        this.ctx.font = \"38px Luckiest Guy\";\n        this.ctx.fillText(`+$${num}`, this.pos[0] + 120, this.pos[1] + 220);\n\n        let textMetrix = this.ctx.measureText(`+$${num}`);\n        let textWidth = textMetrix.width;\n\n        setTimeout( ()=> this.ctx.clearRect(this.pos[0] + 120, this.pos[1] + 186, textWidth, 38), 1000);\n    }\n\n    drawBackground(){\n        this.ctx.fillStyle = \"rgb(38 22 23)\";\n        this.ctx.fillRect(this.pos[0] - 2, this.pos[1], this.size[0] + 6, this.size[1] + 6);\n    }\n}\n\nexport default ProgressBar","import ProgressBar from \"./progress-bar\";\n\nclass ClickableObject{\n    constructor(ctx, options, headerContent){\n        this.ctx = ctx;\n        this.ctx.imageSmoothingEnabled = false;\n\n        this.img1 = new Image();\n        this.img1.src = options.img1;\n        this.img2 = new Image();\n        this.img2.src = options.img2;\n        this.img3 = new Image();\n        this.img3.src = options.img3;\n        this.img4 = new Image();\n        this.img4.src = options.img4;\n        this.counter = 0;\n        this.idleImg = new Image();\n        this.idleImg.src = options.idleImg;\n        this.currentImg = this.img1;\n        this.toggleInterval = null;\n\n        this.size = options.size;\n        this.pos = options.pos;\n\n        this.headerContent = headerContent\n        this.scale = options.scale ? options.scale : [1, 1]\n\n        const progressBar = new ProgressBar(this.ctx, this.pos, this)\n        this.progressBar = progressBar\n\n        this.renderIdle()\n        this.idleImg.onload = () => {\n            this.ctx.clearRect(...this.pos, ...this.size);\n            this.ctx.drawImage(this.idleImg, ...this.pos, ...this.size)\n        }\n\n        if(!localStorage.getItem(\"animationSpeed\")){\n            localStorage.setItem(\"animationSpeed\", 450)\n        }\n    }\n\n    get animationSpeed(){\n        return parseInt(localStorage.getItem(\"animationSpeed\"));\n    }\n    \n    set animationSpeed(num){\n        localStorage.setItem(\"animationSpeed\", num)\n    }\n\n    renderIdle(){\n        this.ctx.clearRect(...this.pos, ...this.size);\n        this.ctx.drawImage(this.idleImg, ...this.pos, ...this.size)\n    }\n\n    toggleImages(){\n        let images = [this.img3, this.img4]\n        if(this.counter === images.length - 1){\n            this.counter = 0\n        }else{\n            this.counter++\n        }\n        this.ctx.clearRect(...this.pos, ...this.size)\n        this.ctx.drawImage(images[this.counter], ...this.pos, ...this.size)\n    }\n\n    animate(){\n        if(this.toggleInterval) return;\n\n        this.toggleInterval = setInterval(() => {\n            this.toggleImages();\n        }, this.animationSpeed)\n    }\n\n    stopAnimation(){\n        if(this.toggleInterval){\n            clearInterval(this.toggleInterval);\n            this.toggleInterval = null;\n            this.renderIdle();\n        }\n    }\n\n    clickHandler(event){\n        const xCoordinates = [this.pos[0], this.pos[0] + this.size[0]]\n        const withinX = (event.canvasX >= xCoordinates[0] && event.canvasX <= xCoordinates[1])\n        const yCoordinates = [this.pos[1], this.pos[1] + this.size[1]]\n        const withinY = (event.canvasY >= yCoordinates[0] && event.canvasY <= yCoordinates[1])\n        \n        if(withinX && withinY){\n            this.progressBar.animate()\n        }\n    }\n\n    addToTotal(num){\n        this.headerContent.cashOnHand = this.headerContent.cashOnHand + num;\n        this.headerContent.renderTotal();\n    }\n\n    autoClick(){\n        setInterval(this.progressBar.animate, 450)\n    }\n\n    displayVictoryCrown(imgUri){\n        const img = new Image();\n\n        img.onload = () => {\n            this.ctx.save(); \n            this.ctx.scale(...this.scale);\n            this.ctx.drawImage(img, this.pos[0] - 10, this.pos[1] + 10, 110, 110); \n            this.ctx.restore(); \n        }\n    \n        img.src = imgUri;\n    }\n}\n\nexport default ClickableObject;","import ClickableObject from \"./clickable-object\";\n\nclass Background{\n    constructor(ctx){\n        this.ctx = ctx\n\n        this.addBackgroundImg(this.ctx)\n    }\n\n    addBackgroundImg(ctx) {\n        const img  = document.querySelector(\"#main-background-img\");\n        ctx.drawImage(img, -750, -400);\n    }\n};\n\nexport default Background; ","class HeaderContent {\n    constructor(){\n        this.renderLogo()\n        this.renderTotal()\n        this.renderMenu()\n        if(localStorage.getItem(\"cashOnHand\") === 'NaN'){\n            localStorage.setItem(\"cashOnHand\", 0)\n        }\n    }\n    \n    get cashOnHand(){\n        let cash = localStorage.getItem(\"cashOnHand\")\n        return cash ? parseInt(cash) : 0\n    }\n\n    set cashOnHand(num) {\n        localStorage.setItem(\"cashOnHand\", num.toString())\n    }\n\n    renderLogo(){\n        const logoEle = document.querySelector(\"#main-title-container\")\n        const logo = document.createElement(\"img\")\n        logo.setAttribute(\"src\", \"./assets/output-onlinepngtools (2).png\")\n        logoEle.appendChild(logo)\n    }\n\n    renderTotal() {\n        const totalEle = document.querySelector(\"#main-total\");\n        totalEle.innerHTML = `<h2>Total: $${this.cashOnHand}</h2>`;\n    }\n\n    renderMenu() {\n        const menuEle = document.querySelector(\"#main-menu\");\n        menuEle.innerHTML = '<h2>Menu</h2>'\n    }\n\n    subtractFromTotal(num){\n        if(this.cashOnHand >= num){\n            this.cashOnHand -= num;\n            this.renderTotal();\n            return true;\n        }else{\n            console.log(\"insufficientfunds\")\n            return false;\n        }\n    }\n\n    resetTotal(){\n        this.cashOnHand = 0\n        this.renderTotal()\n    }\n}\n\nexport default HeaderContent","import ShopContent from \"./shop-content\";\n\nclass StaticObject{\n    constructor(ctx, options){\n        this.ctx = ctx\n        this.img = options.img;\n        this.size = options.size;\n        this.pos = options.pos;\n        this.scale = options.scale ? options.scale : [1, 1];\n\n        this.drawImg();\n        this[options.ability]();\n    }\n\n    drawImg(){\n        const img = new Image();\n\n        img.onload = () => {\n            this.ctx.save(); \n            this.ctx.scale(...this.scale);\n            this.ctx.drawImage(img, ...this.pos, ...this.size); \n            this.ctx.restore(); \n        }\n    \n        img.src = this.img;\n    }\n\n    increaseMaxStorage(){\n        localStorage.setItem(\"maxGold\", 10000);\n        ShopContent.updateStats();\n    }\n\n    increaseSpeed(){\n        let currentLoadSpeed = parseFloat(localStorage.getItem(\"loadSpeed\"))\n        localStorage.setItem(\"loadSpeed\", currentLoadSpeed + 0.35)\n\n        let currentAnimationSpeed = parseInt(localStorage.getItem(\"animationSpeed\"))\n        localStorage.setItem(\"animationSpeed\", currentAnimationSpeed - 50)\n    }\n}\n\nexport default StaticObject","import itemData from './store-items.json';\nimport StaticObject from './static-object';\nimport ClickableObject from './clickable-object';\n\nclass ShopContent{\n    constructor(headerContent, mainCharacter){\n        this.shop = document.querySelector(\"#main-shop\")\n        this.headerContent = headerContent\n        this.mainCharacter = mainCharacter\n        this.ctx = mainCharacter.ctx\n        \n        if(!localStorage.getItem(\"maxGold\")){\n            localStorage.setItem(\"maxGold\", 1000)\n        }\n        \n        this.renderTitle()\n        this.renderShopItems()\n        this.renderStats()\n    }\n    \n    get maxGold(){\n        let gold = localStorage.getItem(\"maxGold\");\n        return parseInt(gold);\n    }\n    \n    set maxGold(num){\n        localStorage.setItem(\"maxGold\", num.toString());\n    }\n    \n    static updateStats(){\n        let currentMax = localStorage.getItem(\"maxGold\");\n        currentMax = parseInt(currentMax)\n    \n        let maxGold = document.querySelector(\"#max-gold\")\n        maxGold.innerText = `Max storage: $${currentMax}`\n    \n        let bestTime = document.querySelector(\"#best-time\")\n        bestTime.innerText = `Best Time: TBD`\n    }\n\n    renderTitle(){\n        let titleItem = document.createElement(\"h2\")\n        titleItem.setAttribute(\"id\", \"shop-title\")\n        titleItem.innerText = \"Shop\"\n        this.shop.appendChild(titleItem)\n    }\n\n    renderShopItems(){\n        itemData[\"store-items\"].forEach(item => {\n            let shopItem = document.createElement(\"div\")\n            shopItem.setAttribute(\"class\",\"shop-item\")\n            shopItem.setAttribute(\"id\", item.name)\n\n            let shopItemPrice = document.createElement(\"p\")\n            shopItemPrice.innerText = `$${item.price}`\n\n            let img = new Image(50, 50)\n            img.src = `${item.imgSrc}`\n\n            shopItem.appendChild(img)\n            shopItem.appendChild(shopItemPrice)\n            this.shop.appendChild(shopItem)\n\n            const classMap = {\n                \"StaticObject\": StaticObject,\n                \"ClickableObject\": ClickableObject\n            }\n\n            shopItem.addEventListener(\"click\", ()=>{\n                if(this.headerContent.subtractFromTotal(`${item.price}`)){\n                    if(item.newInstance){\n                        debugger\n                        let newClass = classMap[item.class]\n                        new newClass(this.ctx, item.args, this.headerContent)\n                    }else if(item.method){\n                        this[item.method][item.action](...item.args)\n                    }\n                }\n            })\n        })\n    }\n\n    renderStats(){\n        let statsItem = document.createElement(\"div\")\n        statsItem.setAttribute(\"id\", \"main-stats\")\n\n        let statsHeader = document.createElement(\"h2\")\n        statsHeader.innerText = \"Current Stats\"\n\n        let maxGold = document.createElement(\"p\")\n        maxGold.setAttribute(\"id\", \"max-gold\")\n        maxGold.innerText = `Max storage: $${this.maxGold}`\n\n        let bestTime = document.createElement(\"p\")\n        bestTime.setAttribute(\"id\", \"best-time\")\n        bestTime.innerText = `Best Time: TBD`\n\n        statsItem.appendChild(statsHeader)\n        statsItem.appendChild(maxGold)\n        statsItem.appendChild(bestTime)\n        this.shop.appendChild(statsItem)\n    }\n}\n\nexport default ShopContent","import ClickableObject from \"./scripts/clickable-object\";\nimport Background from \"./scripts/background\";\nimport HeaderContent from \"./scripts/header-content\"\nimport ShopContent from \"./scripts/shop-content\";\n\nwindow.addEventListener(\"load\", () => {\n    console.log('content has been loaded');\n\n    const canvas = document.getElementById(\"canvas\")\n    const canvas2 = document.getElementById(\"canvas2\")\n\n    const ctx = canvas.getContext(\"2d\")\n    const ctx2 = canvas2.getContext(\"2d\")\n    \n    const background = new Background(ctx)\n    \n    const headerContent = new HeaderContent()\n    \n    const mainCharacterOptions = {\n        pos: [200, 175],\n        size: [150, 170],\n        img1: \"assets/Cowboy 4 HiRes/Cowboy4_idle with gun_3.png\",\n        img2: \"assets/Cowboy 4 HiRes/Cowboy4_idle with gun_0.png\",\n        img3: \"assets/Cowboy 4 HiRes/Cowboy4_idle without gun_3.png\",\n        img4: \"assets/finalShovel.png\",\n        idleImg: \"assets/Cowboy 4 HiRes/Cowboy4_idle without gun_1.png\"\n    }\n    \n    const mainCharacter = new ClickableObject(ctx2, mainCharacterOptions, headerContent)\n    canvas2.addEventListener(\"click\", (event) => {\n        const rect = canvas2.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        \n        event.canvasX = x;\n        event.canvasY = y;\n        \n        mainCharacter.clickHandler(event);\n    });\n    \n    const shopContent = new ShopContent(headerContent, mainCharacter)\n})\n    "],"names":["constructor","ctx","pos","clickableObject","this","size","loadTime","currentWidth","complete","animating","localStorage","getItem","setItem","loadSpeed","parseFloat","num","animate","currentCash","parseInt","currentMax","console","log","drawBackground","internalAnimate","reset","reward","Math","floor","random","clearRect","addToTotal","stopAnimation","renderReward","update","requestAnimationFrame","fillStyle","fillRect","clear","isComplete","font","fillText","textWidth","measureText","width","setTimeout","options","headerContent","imageSmoothingEnabled","img1","Image","src","img2","img3","img4","counter","idleImg","currentImg","toggleInterval","scale","progressBar","ProgressBar","renderIdle","onload","drawImage","animationSpeed","toggleImages","images","length","setInterval","clearInterval","clickHandler","event","xCoordinates","withinX","canvasX","yCoordinates","withinY","canvasY","cashOnHand","renderTotal","autoClick","displayVictoryCrown","imgUri","img","save","restore","addBackgroundImg","document","querySelector","renderLogo","renderMenu","cash","toString","logoEle","logo","createElement","setAttribute","appendChild","innerHTML","subtractFromTotal","resetTotal","drawImg","ability","increaseMaxStorage","ShopContent","updateStats","increaseSpeed","currentLoadSpeed","currentAnimationSpeed","mainCharacter","shop","renderTitle","renderShopItems","renderStats","maxGold","gold","innerText","titleItem","itemData","forEach","item","shopItem","name","shopItemPrice","price","imgSrc","classMap","StaticObject","ClickableObject","addEventListener","newInstance","newClass","class","args","method","action","statsItem","statsHeader","bestTime","window","canvas","getElementById","canvas2","getContext","ctx2","Background","HeaderContent","rect","getBoundingClientRect","x","clientX","left","y","clientY","top"],"sourceRoot":""}